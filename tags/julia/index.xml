<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Julia on systems++</title><link>http://robertu94.github.io/tags/julia.html</link><description>Recent content in Julia on systems++</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 15 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://robertu94.github.io/tags/julia/index.xml" rel="self" type="application/rss+xml"/><item><title>Three Neat Things I Did With Julia</title><link>http://robertu94.github.io/2022/12/15/three-neat-things-i-did-with-julia.html</link><pubDate>Thu, 15 Dec 2022 00:00:00 +0000</pubDate><guid>http://robertu94.github.io/2022/12/15/three-neat-things-i-did-with-julia.html</guid><description>In the past, I&amp;rsquo;ve written pretty glowingly about Julia. It&amp;rsquo;s been a few years since I first used Julia in 2019, and it hasn&amp;rsquo;t completely replaced Python for me. However, I wanted to share a few neat projects that I&amp;rsquo;ve done using it which would have been much more painful without it, and share what I think now about what I wrote in 2019.
Implementing a Statistical Metric on the GPU Being able to access heterogenous compute is important to be able to make the most of the availible hardware.</description></item><item><title>Julia: Could There be One Language?</title><link>http://robertu94.github.io/2019/04/04/julia-could-there-be-one-language.html</link><pubDate>Thu, 04 Apr 2019 09:00:00 -0500</pubDate><guid>http://robertu94.github.io/2019/04/04/julia-could-there-be-one-language.html</guid><description>There is a constant problem with programming language design: fast, generic, easy to write; pick two. The principle is that programming languages cannot be all three at once. Code that is Fast and Generic like C++ isn&amp;rsquo;t exactly easy to write. Code that is Generic and easy to write like Python isn&amp;rsquo;t always fast in the sense that C/C++ programmers mean it. Code that is Fast and Easy to Write isn&amp;rsquo;t always Generic in the sense that Python is.</description></item></channel></rss>