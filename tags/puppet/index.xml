<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Puppet on systems++</title><link>http://robertu94.github.io/tags/puppet.html</link><description>Recent content in Puppet on systems++</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 31 Jul 2018 10:00:00 -0500</lastBuildDate><atom:link href="http://robertu94.github.io/tags/puppet/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuration Management: Common Pitfalls</title><link>http://robertu94.github.io/2018/07/31/configuration-management-common-pitfalls.html</link><pubDate>Tue, 31 Jul 2018 10:00:00 -0500</pubDate><guid>http://robertu94.github.io/2018/07/31/configuration-management-common-pitfalls.html</guid><description>So you know you need a configuration management system and you have an idea of which one will work for you. So what should I think about about before deploying one of this systems? In this third and final post in this series, I present some suggestions about using these systems in a way that is flexible and scalable to larger numbers of systems.
Even within an operating system like Linux, there is a lot of variation between Linux distributions.</description></item><item><title>Configuration Management: the Battle Royal</title><link>http://robertu94.github.io/2018/07/31/configuration-management-the-battle-royal.html</link><pubDate>Tue, 31 Jul 2018 09:00:00 -0500</pubDate><guid>http://robertu94.github.io/2018/07/31/configuration-management-the-battle-royal.html</guid><description>So, you need a Configuration Management System, so which one do you choose? This post is the second in a three part series on configuration management. In this post, I&amp;rsquo;ll highlight the strengths of these systems and their respective weaknesses.
Every evaluation needs to have criteria to be useful. Here are some of the criteria that I have had when I thought about this question.
Ease of Use Time to Setup Difficulty of Adding More Machines Difficulty of Creating New Modules Difficulty of Supporting More Configurations Quality of Documentation Puppet Puppet is the oldest open source configuration management system, and perhaps the mostly widely deployed in enterprise environments.</description></item><item><title>Configuration Management: the Related Systems</title><link>http://robertu94.github.io/2018/07/31/configuration-management-the-related-systems.html</link><pubDate>Tue, 31 Jul 2018 08:00:00 -0500</pubDate><guid>http://robertu94.github.io/2018/07/31/configuration-management-the-related-systems.html</guid><description>Configuration Management Systems like Ansible, Chef, Puppet, and SaltStack are in my opinion are nearly essential if you find yourself managing more than 5 machines. But what exactly are they, which is better for my circumstances, do I still need them if I use a container based infrastructure, how do I get started? This post is the first in a series of posts that will attempt to answer these questions.</description></item></channel></rss>