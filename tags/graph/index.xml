<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Graph on Systems++</title><link>https://robertu94.github.io/tags/graph/</link><description>Recent content in Graph on Systems++</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 23 Sep 2017 07:00:00 -0500</lastBuildDate><atom:link href="https://robertu94.github.io/tags/graph/index.xml" rel="self" type="application/rss+xml"/><item><title>Design of A Matrix loading Library</title><link>https://robertu94.github.io/posts/2017-09-23-matrixloading-library/</link><pubDate>Sat, 23 Sep 2017 07:00:00 -0500</pubDate><guid>https://robertu94.github.io/posts/2017-09-23-matrixloading-library/</guid><description>&lt;p>Ever notice that every matrix and graph library seems to have a different interface for constructing matrices?
Also notice that each only only supports some subset of common matrix formats?
With a little help from the Adapter and Builder design patterns we can actually solve this problem.&lt;/p></description></item></channel></rss>