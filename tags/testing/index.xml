<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on Systems++</title><link>https://robertu94.github.io/tags/testing/</link><description>Recent content in Testing on Systems++</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 22 Jan 2017 18:58:14 -0500</lastBuildDate><atom:link href="https://robertu94.github.io/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>LLVM Tooling for C++</title><link>https://robertu94.github.io/posts/2017-01-22-llvm-tooling/</link><pubDate>Sun, 22 Jan 2017 18:58:14 -0500</pubDate><guid>https://robertu94.github.io/posts/2017-01-22-llvm-tooling/</guid><description>&lt;p>C++ is a both a fantastic language and a mess.
It supports at least 4 programming paradigms (procedural, functional, object-oriented, template meta-programming).
In some senses, many languages give you one great way to do things: C++ gives you every way and trusts you to use them well.
With this flexibility comes problems that C++ seems to have beyond what other languages experience.
Therefore, having effective tooling to develop and use C++ is essential.&lt;/p></description></item></channel></rss>