<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>testing on systems++</title><link>http://robertu94.github.io/tags/testing.html</link><description>Recent content in testing on systems++</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 22 Jan 2017 18:58:14 -0500</lastBuildDate><atom:link href="http://robertu94.github.io/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>LLVM Tooling for C++</title><link>http://robertu94.github.io/2017/01/22/llvm-tooling-for-c-.html</link><pubDate>Sun, 22 Jan 2017 18:58:14 -0500</pubDate><guid>http://robertu94.github.io/2017/01/22/llvm-tooling-for-c-.html</guid><description>C++ is a both a fantastic language and a mess. It supports at least 4 programming paradigms (procedural, functional, object-oriented, template meta-programming). In some senses, many languages give you one great way to do things: C++ gives you every way and trusts you to use them well. With this flexibility comes problems that C++ seems to have beyond what other languages experience. Therefore, having effective tooling to develop and use C++ is essential.</description></item></channel></rss>