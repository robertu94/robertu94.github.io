<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>clang on systems++</title><link>http://robertu94.github.io/tags/clang.html</link><description>Recent content in clang on systems++</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 28 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://robertu94.github.io/tags/clang/index.xml" rel="self" type="application/rss+xml"/><item><title>Refactoring With Clang Query</title><link>http://robertu94.github.io/2022/12/28/refactoring-with-clang-query.html</link><pubDate>Wed, 28 Dec 2022 00:00:00 +0000</pubDate><guid>http://robertu94.github.io/2022/12/28/refactoring-with-clang-query.html</guid><description>Have you ever wanted to identify a list of files that would need modifications to adopt a new API? Clang-Query can make this much easier. I recently wanted to introduce a set of helper functions to simplfy an aspect of compressor configuation in LibPressio. But first, I needed to know what modules were effected.
Clang-query needs a compilation database which can be produced by tools such as bear (if you have a Autotools or Makefile based project) or more sophisticated build systems such as cmake, meson or bazel.</description></item></channel></rss>