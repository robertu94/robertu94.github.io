<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>C++11 on systems++</title><link>http://robertu94.github.io/tags/c++11.html</link><description>Recent content in C++11 on systems++</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 23 Feb 2017 08:38:14 -0500</lastBuildDate><atom:link href="http://robertu94.github.io/tags/c++11/index.xml" rel="self" type="application/rss+xml"/><item><title>Surprisingly Functional</title><link>http://robertu94.github.io/2017/02/23/surprisingly-functional.html</link><pubDate>Thu, 23 Feb 2017 08:38:14 -0500</pubDate><guid>http://robertu94.github.io/2017/02/23/surprisingly-functional.html</guid><description>Functional programming is a surprisingly useful programming paradigm. The best aspects of functional programming have this odd habit of showing in places you would never expect.
The Shell and Endomorphisms Arguably one of the most powerful features of the Unix shell is the pipe. It is one of the core building blocks of the Unix philosophy of many small tools working together each doing one thing well. However, long before Unix, the idea of the endomorphisms was developed.</description></item></channel></rss>