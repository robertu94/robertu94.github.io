<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Software Engineering on systems++</title><link>http://robertu94.github.io/tags/software-engineering.html</link><description>Recent content in Software Engineering on systems++</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://robertu94.github.io/tags/software-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning to Learn: Software Teams</title><link>http://robertu94.github.io/learning/software_for_teams.html</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>http://robertu94.github.io/learning/software_for_teams.html</guid><description>Outside of school very seldom in software development will you completely work alone on a project. Leading and being an effective member of a software team will be critical to your success in this field. However each team and project is different. Some projects have a high iteration cost because testing could cause people to die (e.g. bugs in rocket guidance systems in manned space flight), testing could be lengthy (e.</description></item><item><title>Learning to Learn: Software Development on Linux</title><link>http://robertu94.github.io/learning/development.html</link><pubDate>Sun, 22 Jan 2023 08:00:00 -0500</pubDate><guid>http://robertu94.github.io/learning/development.html</guid><description>What is software development? At a most basic level, it is the activity of using a programming language to achieve some set of goals over time. It includes everything from scripts that a graduate student might write to analyze some data to massive systems that control aircraft. As our world continues to progress technically, software development will likely become even more commonplace than it is now. In this post, I aim to provide a comprehensive overview of how one can develop software efficiently using free and open source tools on Linux.</description></item><item><title>Strong or Robust?</title><link>http://robertu94.github.io/2019/11/17/strong-or-robust.html</link><pubDate>Sun, 17 Nov 2019 08:00:00 -0500</pubDate><guid>http://robertu94.github.io/2019/11/17/strong-or-robust.html</guid><description>Should a software design be strong or robust? This is a debate that seems to have been developing in recent years with the recent proponents so-called &amp;ldquo;strong-typing&amp;rdquo; advocating new API designs. In this post, I go a little into the debate and discuss its consequences.
What does it mean to be strong vs robust? Robustness in software engineering is not a new concept, and intuitively a attractive one. Who doesn&amp;rsquo;t want their software to be robust?</description></item></channel></rss>