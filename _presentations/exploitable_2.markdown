---
title: Exploitable 2
layout: presentation
location: CU Cyber and Clemson ACM Crossover Seminar
date: 2016-04-01
description: >
  This talk introduces Docker and why you should care about it.  It highlights
  differences between Docker and VMs while clarifying common misconceptions.  I
  talk about how to create docker containers and containerize applications.
acknowledgments: Mackenzie Binns collaborated on these slides
video: https://youtu.be/yzILULoVQzg
...
<section id="exploitable-2" class="title-slide slide level1">
<h1>Exploitable 2</h1>
<p>Writing Secure Applications</p>
</section>

<section>
<section id="brought-to-you-by-clemson-acm-and-cucyber" class="title-slide slide level1">
<h1>Brought to you by Clemson ACM and CUCyber</h1>
<p>We’re on <a href="http://steamcommunity.com/groups/clemsonacm">Steam</a> &amp; Freenode! Join #clemsonacm on chat.freenode.net!</p>
</section>
<section id="speakers" class="slide level2">
<h2>Speakers:</h2>
<p>Robert Underwood - ACM Vice President</p>
<p>Mackenzie Binns - CUCyber President</p>
</section></section>
<section id="overview" class="title-slide slide level1">
<h1>Overview</h1>
<ol type="1">
<li>Why secure applications?</li>
<li>OWASP Top 10 Web Vulnerabilities
<ol type="1">
<li>What are they, and how bad are they?</li>
<li>How to identify them.</li>
<li>How to mitigate them.</li>
</ol></li>
</ol>
</section>

<section id="why-secure-applications" class="title-slide slide level1">
<h1>Why secure applications?</h1>
<ul>
<li>According to the Bureau of Justice Statistics (2005):
<ul>
<li>67% of businesses experience Cyber crime</li>
<li>Of those 60% experienced more than 1 threat</li>
<li>Less than 1% of crime amounting to 50% of monetary loss</li>
</ul></li>
<li>And that was before
<ul>
<li>Target was hacked in 2012</li>
<li>Home Depot was hacked 2014</li>
<li><a href="http://www.mcafee.com/us/resources/reports/rp-economic-impact-cybercrime.pdf">McAfee</a> estimated 24-120B$ total cost in 2013</li>
</ul></li>
</ul>
</section>

<section id="how-severe-is-it" class="title-slide slide level1">
<h1>How severe is it?</h1>
<ul>
<li>Graded in 4 areas
<ul>
<li>Attack Vectors</li>
<li>Weakness prevalence</li>
<li>Weakness detect-ability</li>
<li>Technical Impacts</li>
</ul></li>
</ul>
</section>

<section id="owasp-top-10" class="title-slide slide level1">
<h1>OWASP Top 10</h1>

</section>

<section>
<section id="web-vulnerabilities" class="title-slide slide level1">
<h1>Web Vulnerabilities</h1>

</section>
<section id="injection" class="slide level2">
<h2>1. Injection</h2>
<p>Allowing untrusted inputs to command shells</p>
<p>bash</p>
<pre><code>echo $1</code></pre>
<p>sql</p>
<pre><code>SELECT * FROM accounts WHERE username=&#39;&quot; parameter &quot;&#39;;&quot;</code></pre>
</section>
<section id="broken-session-management" class="slide level2">
<h2>2. Broken Session Management</h2>
<p>Predictable or unprotected authentication</p>
<ul>
<li>Authentication credentials are weakly or un-encrypted</li>
<li>Session credentials are consistent or predictable</li>
<li>Sessions don’t timeout or expire after logout</li>
</ul>
</section>
<section id="cross-site-scripting" class="slide level2">
<h2>3. Cross Site Scripting</h2>
<p>Unsafe dynamic content</p>
<ul>
<li>Displaying content from un-trusted sources</li>
<li>Try to use a whitelist</li>
</ul>
</section>
<section id="insecure-direct-object-reference" class="slide level2">
<h2>4. Insecure Direct Object Reference</h2>
<p>Failing to check permissions on object reference</p>
<blockquote>
<p>insecurehost.com/?page=/etc/passwd</p>
</blockquote>
<ul>
<li>Check permissions prior to access</li>
<li>Check permissions after resolving links</li>
</ul>
</section>
<section id="security-misconfiguration" class="slide level2">
<h2>5. Security Misconfiguration</h2>
<p>patch your site and turn off debug output</p>
<ul>
<li>Nuff’ said</li>
</ul>
</section>
<section id="sensitive-data-exposure" class="slide level2">
<h2>6. Sensitive Data Exposure</h2>
<p>Sending sensitive materials in plaintext</p>
<ul>
<li>Don’t send secure data in plain text</li>
<li>Turn off insecure cryptography</li>
<li>Don’t allow security downgrading</li>
</ul>
</section>
<section id="missing-function-level-access-control" class="slide level2">
<h2>7. Missing Function Level Access Control</h2>
<p>Is it possible to bypass access controls</p>
<ul>
<li>Protecting <code>/admin</code> but not <code>/admin/users</code></li>
<li>Are authentication checks done user-side?</li>
</ul>
</section>
<section id="cross-site-request-forgery" class="slide level2">
<h2>8. Cross Site Request Forgery</h2>
<p>Stealing valid authentication from another site</p>
<ul>
<li>Use a unique token to authenticate requests</li>
</ul>
</section>
<section id="known-vulnerable-components" class="slide level2">
<h2>9. Known Vulnerable Components</h2>
<p>Using a library that has well know problems</p>
<ul>
<li>Relying on an old insecure version</li>
<li>Relying on a backend with a backdoor</li>
</ul>
</section>
<section id="unvalidated-redirects-and-forwards" class="slide level2">
<h2>10. Unvalidated Redirects and Forwards</h2>
<p>Don’t forward to sites based on user input</p>
</section></section>
<section>
<section id="traditional-application-vulnerabilities" class="title-slide slide level1">
<h1>Traditional Application Vulnerabilities</h1>

</section>
<section id="improper-permissions" class="slide level2">
<h2>Improper permissions</h2>
<ul>
<li>Running an applications as root that don’t require it</li>
<li>Overly wide permissions on files</li>
<li>Setuid and Setgid</li>
</ul>
</section>
<section id="buffer-overflow" class="slide level2">
<h2>Buffer Overflow</h2>
<pre><code>char password[8];
int login;
scanf(&quot;%s&quot;,&amp;password&quot;);</code></pre>
<ul>
<li>Allowing writes past the end of buffers</li>
</ul>
</section>
<section id="injection-1" class="slide level2">
<h2>Injection</h2>
<pre><code>sprintf(cmd, &quot;ls %s&quot;, directory)
system(cmd);</code></pre>
<ul>
<li>Be sure to also check databases and systems</li>
</ul>
</section>
<section id="attack-vectors" class="slide level2">
<h2>Attack Vectors</h2>
<ul>
<li>Avoid unnecessary dependencies</li>
<li>Avoid scope creep in projects</li>
</ul>
</section>
<section id="heap-exploits" class="slide level2">
<h2>Heap Exploits</h2>
<ul>
<li>Use after free</li>
<li>Double free</li>
<li>Memory leaks</li>
</ul>
</section>
<section id="resource-bombs" class="slide level2">
<h2>Resource Bombs</h2>
<pre><code>while(1) {fork(); malloc(1000);</code></pre>
<ul>
<li>Fork Bomb</li>
<li>Exponential expansion</li>
<li>Exponential run time expansion</li>
</ul>
</section></section>
<section id="further-resources" class="title-slide slide level1">
<h1>Further Resources</h1>
<ul>
<li><a href="http://owasptop10.googlecode.com/files/OWASP%20Top%2010%20-%202013.pdf">OWASP Top 10</a></li>
<li><a href="https://www.owasp.org/images/9/9a/OWASP_Cheatsheets_Book.pdf">OWASP Cheatsheets</a></li>
</ul>
</section>

<section id="questions" class="title-slide slide level1">
<h1>Questions</h1>
<p>Send us feedback at <code>acm@cs.clemson.edu</code>!</p>
<p>This material available under <a href="http://creativecommons.org/licenses/by-sa/4.0/">CC By-SA 4.0</a></p>
</section>
