<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Systems++</title><link>https://robertu94.github.io/presentations/</link><description>Recent content on Systems++</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 15 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://robertu94.github.io/presentations/index.xml" rel="self" type="application/rss+xml"/><item><title>LibPressio</title><link>https://robertu94.github.io/presentations/ecp2021-lossy/</link><pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/ecp2021-lossy/</guid><description>This talk was part of a larger session on Error Bounded Lossy Compression. It presents updates on LibPressio since the last annual meeting focusing on the automated configuration work completed as part of FRaZ and LibPressio-Opt as well as interface improvements.</description></item><item><title>Approachable Error Bounded Lossy Compression</title><link>https://robertu94.github.io/presentations/sc2020-doctoral/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/sc2020-doctoral/</guid><description>Compression is commonly used in HPC applications to move and store data. Traditional losslesscompression, however, does not provide adequate compression of floating point data often found inscientific codes. Recently, researchers and scientists have turned to lossy compression techniquesthat approximate the original data rather than reproduce it in order to achieve desired levels ofcompression. Typical lossy compressors do not bound the errors introduced into the data, leading to the development of error bounded lossy compressors (EBLC). These tools provide the desired levelsof compression as mathematical guarantees on the errors introduced. The current state of EBLCleaves much to be desired. The existing EBLC all have different interfaces requiring codes to bechanged to adopt new techniques; EBLC have many more configuration options than theirpredecessors, making them more difficult to use; and EBLC typically bound quantities like pointwise errors rather than higher level metrics such as spectra, p-values, or test statistics thatscientists typically use. My dissertation aims to provide a uniform interface to compression and todevelop tools to allow application scientists to understand and apply EBLC. This canvas presentsthree groups of work: LibPressio, a standard interface for compression and analysis;FRaZ/LibPressio-Opt frameworks for the automated configuration of compressors using LibPressio;and work on tools for analyzing errors in particular domains</description></item><item><title>Lossy Compression for AI</title><link>https://robertu94.github.io/presentations/jlesc2020-lossy/</link><pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/jlesc2020-lossy/</guid><description>As time progresses, the volume of data surrounding machine learning and AI methods continues to grow from training, testing, and validation datasets to the models themselves. As the volume grows, there are increasing challenges in transporting and storing the data. Lossy compression techniques present the opportunity to drastically reduce the volume of data while maintaining or even improving upon the quality of the decisions made by AI. This talk presents a survey of novel research examining the effect of lossy compression on AI decision making in a variety of domains including medical data science and physics. We examine the effects of data ordering, error bounds, compression methodologies to make general recommendations from these and other areas regarding how to effectively leverage lossy compression in AI using the common LibPressio interface.</description></item><item><title>FRaZ: A Generic High-Fidelity Fixed-Ratio Lossy Compression Framework for Floating Point Scientific Data</title><link>https://robertu94.github.io/presentations/ipdps2020-fraz/</link><pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/ipdps2020-fraz/</guid><description>With ever-increasing volumes of scientific floating-point data being produced by high-performance computingapplications, significantly reducing scientific floating-point datasize is critical, and error-controlled lossy compressors have beendeveloped for years. None of the existing scientific floating-pointlossy data compressors, however, support effective fixed-ratiolossy compression. Yet fixed-ratio lossy compression for scientificfloating-point data not only compresses to the requested ratio butalso respects a user-specified error bound with higher fidelity. Inthis paper, we present FRaZ: a generic fixed-ratio lossy com-pression framework respecting user-specified error constraints.The contribution is twofold. (1) We develop an efficient iterativeapproach to accurately determine the appropriate error settingsfor different lossy compressors based on target compressionratios. (2) We perform a thorough performance and accuracyevaluation for our proposed fixed-ratio compression frameworkwith multiple state-of-the-art error-controlled lossy compressors,using several real-world scientific floating-point datasets fromdifferent domains. Experiments show that FRaZ effectively iden-tifies the optimum error setting in the entire error setting space ofany given lossy compressor. While fixed-ratio lossy compressionis slower than fixed-error compression, it provides an importantnew lossy compression technique for users of very large scientificfloating-point datasets.</description></item><item><title>LibPressio Tutorial</title><link>https://robertu94.github.io/presentations/libpressio2020-tutorial/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/libpressio2020-tutorial/</guid><description>This video provides a basic tutorial of how to install and use LibPressio &amp;ndash; a generic abstraction for lossless and lossy compression for dense tensors. You can find LibPressio on &lt;a href="https://github.com/codarcode/libpressio" target="_blank" rel="noreferrer">github&lt;/a></description></item><item><title>Approachable Error Bounded Lossy Compression</title><link>https://robertu94.github.io/presentations/argonne2019-aproachable/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/argonne2019-aproachable/</guid><description>Error Bounded Lossy Compression is a powerful technique that combines the power of lossy compression with the strong guarantees for the preservation of the original data. However, using error bounded lossy compression can be challenging. There is a proliferation of interfaces, different semantics, and difficult to understand relationships to user error bounds. This talk presents two tools — LibPressio and FRaZ — that help address these issues. LibPressio provides a usable abstraction across SZ, ZFP, MGARD, as well as traditional image compressors (JPEG, WEBP, PNG, TIFF, etc) and lossless compressors via BLOSC. FRaZ is a tool that uses LibPresssio to compress datasets according to a Fixed Compression Ratio with progress towards supporting arbitrary user error bounds. I present our recent work submitted to IPDPS and current work in progress.</description></item><item><title>Predicting Optimal Error-Bounded-Lossy-Compression Configuration</title><link>https://robertu94.github.io/presentations/sc2018-predicting/</link><pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/sc2018-predicting/</guid><description>Techniques for predicting error bounded lossy compression ratios from data distribution and compressor settings.</description></item><item><title>C++ Templates: Starring into the Abyss</title><link>https://robertu94.github.io/presentations/templates/</link><pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/templates/</guid><description>C++ templates are one of the most powerful, and probably least understood aspects of C++ programming. Trying to understand error messages from templates code can feel like staring into the abyss. In this talk, I introduce many of the various features and dive into applications of C++ templates that are used in the wild. I will cover several of the common pitfalls and design patterns that result from this feature of C++. I will also stare right into the heart of the abyss and explain why the error messages can be cryptic, why its a good thing, and how to begin to decipher those error messages.</description></item><item><title>Dockerize All the Things!</title><link>https://robertu94.github.io/presentations/docker/</link><pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/docker/</guid><description>This talk introduces Docker and why you should care about it. It highlights differences between Docker and VMs while clarifying common misconceptions. I talk about how to create docker containers and containerize applications.</description></item><item><title>Provisioning at the Speed of Thought</title><link>https://robertu94.github.io/presentations/provisioning/</link><pubDate>Sat, 01 Oct 2016 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/provisioning/</guid><description>Ever sit down to setup a set of computers and wonder, “why on earth do I have to do this manually on each and every node?” Writing scripts can solve the problem, but handling error is annoying and time consuming. It does not have to be that way. Configuration management tools such as Ansible, SaltStack, and Puppet take the pain out of managing small to large groups of computers. By the end of the presentation, You’ll learn some of the strengths and weaknesses of each so that you can decide which tool will fit your needs.</description></item><item><title>Exploitable 3: Reverse Engineering</title><link>https://robertu94.github.io/presentations/exploitable_3/</link><pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/exploitable_3/</guid><description>This seminar provides and overview of reverse engineering and how you might use it as a developer. I overview a variety of tools ranging from binary analysis, ptrace, kernel tracing tools, and kernel hacking and when to use each.</description></item><item><title>Writing Semantic Code: Using Refactoring Patterns for Better Code</title><link>https://robertu94.github.io/presentations/semantic/</link><pubDate>Mon, 01 Aug 2016 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/semantic/</guid><description>Spaghetti code is a nightmare. It is hard to read, harder to understand, and harder still to debug and change. In this talk, I introduce the discipline of refactoring which transforms code in a way that maintains its external behavior while improving it&amp;rsquo;s internal structure. I will present several examples of poor design often seen in imperative code, and describe some techniques to refactor this code to easier to understand semantic code from Martin Fowler&amp;rsquo;s book &amp;ldquo;Refactoring: Improving the Design of Existing Software&amp;rdquo;.</description></item><item><title>Automation in the Classroom</title><link>https://robertu94.github.io/presentations/autograding/</link><pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/autograding/</guid><description>The purpose of this talk is to introduce how instructors could approach the topic of using automation in the classroom. We will make a case for automation both from a student&amp;rsquo;s and instructor&amp;rsquo;s perspective by showing that automation can save time, encourage test driven development, and improve testing for knowledge. We will also address concerns regarding grading automation including accuracy, confidentiality, and security. Then we will get into detail about techniques and tools that can be used for classroom automation. Finally we will examine case studies of how automation has and can be implemented. We will examine how this has been done technically as well as part of the classroom environment by faculty members at the School of Computing.</description></item><item><title>Exploitable 2</title><link>https://robertu94.github.io/presentations/exploitable_2/</link><pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/exploitable_2/</guid><description>This talk introduces Docker and why you should care about it. It highlights differences between Docker and VMs while clarifying common misconceptions. I talk about how to create docker containers and containerize applications.</description></item><item><title>Python: A Parser Tongue Primer</title><link>https://robertu94.github.io/presentations/python/</link><pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/python/</guid><description>An introduction to idiomatic python programming for new computer science students.</description></item><item><title>Linux is Scary</title><link>https://robertu94.github.io/presentations/linux/</link><pubDate>Mon, 01 Feb 2016 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/linux/</guid><description>Introduction to Linux for new computer science students. Presented multiples times,</description></item><item><title>Think Different</title><link>https://robertu94.github.io/presentations/projects/</link><pubDate>Mon, 01 Feb 2016 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/projects/</guid><description>A talk that provides an overview of how to approach computer science projects with less stress and effort. This talk was given multiple times at various Clemson ACM venues. Also titled, &amp;ldquo;Perfecting Your Projects&amp;rdquo;.</description></item><item><title>Thou Shall Not Pass! Introduction to Open Source Firewalls</title><link>https://robertu94.github.io/presentations/firewall/</link><pubDate>Mon, 01 Feb 2016 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/firewall/</guid><description>This talks talks about what firewalls are, why you need one, and how to setup a basic firewall using iptables, firewalld, and pf.</description></item><item><title>Exploitable: An Introduction to Ethical Hacking</title><link>https://robertu94.github.io/presentations/exploitable/</link><pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/exploitable/</guid><description>This seminar talks about what is ethical hacking, how to learn how to do it, and how to set up a ethical hacking lab using Docker.</description></item><item><title>NMAP</title><link>https://robertu94.github.io/presentations/nmap/</link><pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/nmap/</guid><description>This talk overviews NMAP a network mapping tool that is useful for understanding and monitoring your network.</description></item><item><title>Git Well Soon</title><link>https://robertu94.github.io/presentations/git/</link><pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/git/</guid><description>This talks overviews the git distributed version control system, what problems it solves, and how to use it. This talk was presented multiple times also under the title &amp;ldquo;Git Thee to a Version Control System&amp;rdquo;</description></item><item><title>N Unix Tools in O(N ) Minutes</title><link>https://robertu94.github.io/presentations/tools/</link><pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/tools/</guid><description>Overview of command line tools for POSIX platforms. This talk covers some of the most useful POSIX scripting tools including awk, sed, gdb, find, and more.</description></item><item><title>Intermediate Vim</title><link>https://robertu94.github.io/presentations/vim/</link><pubDate>Sun, 01 Feb 2015 00:00:00 +0000</pubDate><guid>https://robertu94.github.io/presentations/vim/</guid><description>An intermediate level talk that aims to showcase neat features of vim above and beyond what is covered in vimtutor.</description></item></channel></rss>